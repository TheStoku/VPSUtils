#!/bin/sh

# Watch script
# Author: Stoku, XenoN
# Copyright 2022

this_script_name=${0##*/}
timer=3
server_path="$2"
server_name="$3"
mode="$4"
run_echo_script="echo_buffer.sh"

if [ -z "$4" ]; then
    echo "watcher: setting default mode rd"
    mode="-rd"
else
    echo "watcher: setting mode ${4}"
    mode="$4"
fi

if [ "$1" = "--start" ]; then
    #> ${run_echo_script}
	#screen -ls
    screen -AmdS ${server_name}_watcher watch -n $timer ./${this_script_name} --loop
elif [ "$1" = "--stop" ]; then
	screen -X -S ${server_name}_watcher quit
    screen -X -S ${server_name} quit
	screen -ls
elif [ "$1" = "--loop" ]; then
    if [ "$mode" = "-d" ] || [ "$mode" = "-rd" ]; then
	    ./${run_echo_script}
        #> ${run_echo_script}
    elif [ "$mode" = "-r" ] || [ "$mode" = "-rd" ]; then
        if ! screen -list | grep -q "${server_name}"; then
            echo "Autorestarter: process ${server_path} not found. Restarting."
    	    screen -AmdS ${server_name} ./Server.bin
        fi
    fi
else
	echo "Usage:"
	echo "[--start] - uruchamia pętlę co ${timer} sekund/y w screen pod nazwą ${server}_discord_watch"
	echo "[--stop]  - ubija pętlę"
	echo "[--loop]  - do użytku przez skrypt | Parametr testowy; uruchamia plik ${run_script}"
	echo "            i czyści jego zawartość"
fi

function find_screen {
    if screen -ls "$1" | grep -o "^\s*[0-9]*\.$1[ "$'\t'"](" --color=NEVER -m 1 | grep -oh "[0-9]*\.$1" --color=NEVER -m 1 -q >/dev/null; then
        screen -ls "$1" | grep -o "^\s*[0-9]*\.$1[ "$'\t'"](" --color=NEVER -m 1 | grep -oh "[0-9]*\.$1" --color=NEVER -m 1 2>/dev/null
        return 0
    else
        echo "$1"
        return 1
    fi
}
